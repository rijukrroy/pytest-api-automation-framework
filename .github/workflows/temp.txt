name: ðŸ§ª Pytest with Allure

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest

      - name: Run pytest with Allure
        run: |
          mkdir -p reports
          pytest -v --alluredir=reports/

      - name: Add Allure environment & executor info
        run: |
          echo "BASE_URL=https://gorest.co.in" >> reports/environment.properties
          echo "AUTH_TOKEN=Bearer ****" >> reports/environment.properties
          echo '{"name":"GitHub Actions","type":"CI","url":"https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' > reports/executor.json

      - name: Debug reports folder
        run: ls -R reports || echo "No reports directory"

      - name: Upload Allure results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: reports

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Allure results artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: reports

      - name: Generate Allure report
        run: |
          npm install -g allure-commandline --save-dev
          allure generate reports -o _site --clean

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site
